name: CI

on:
  push:
    branches:
      - 'master'
    tags: [ 'v*' ]
  pull_request:
    branches:
      - 'master'

jobs:
  test:
    name: Test
    runs-on: ${{ matrix.platform.os }}
    strategy:
      matrix:
        python_version: ['3.6', '3.7', '3.8', '3.9', '3.10', 'pypy-3.7']
        platform: [
        {
          os: 'macos-latest',
          python_architecture: 'x64',
          rust_target: 'x86_64-apple-darwin'
        },
        {
          os: 'ubuntu-latest',
          python_architecture: 'x64',
          rust_target: 'x86_64-unknown-linux-gnu'
        },
        {
          os: 'windows-latest',
          python_architecture: 'x64',
          rust_target: 'x86_64-pc-windows-msvc'
        },
        {
          os: 'windows-latest',
          python_architecture: 'x86',
          rust_target: 'i686-pc-windows-msvc'
        },
        ]
        exclude:
          - python_version: 'pypy-3.7'
            platform: { os: 'windows-latest', python_architecture: 'x86' }
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
        with:
          submodules: true
      - name: 'Setup Python ${{ matrix.python_version }}'
        uses: actions/setup-python@v2
        with:
          python_version: ${{ matrix.python_version }}
          architecture: ${{ matrix.platform.python_architecture }}
      - name: 'Install Rust toolchain'
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          target: ${{ matrix.platform.rust_target }}
          default: true
        if: ${{ !startsWith(matrix.python_version, 'pypy') }}
      - name: 'Install Rust aarch64-apple-darwin target'
        run: rustup target add aarch64-apple-darwin
        if: ${{ matrix.platform.os == 'macos-latest'
                && !startsWith(matrix.python_version, 'pypy') }}
      - name: 'Install coverage dependencies'
        run: python -m pip install --upgrade coverage codecov
      - name: 'Install Rust coverage dependencies'
        run: cargo install grcov
        if: ${{ !startsWith(matrix.python_version, 'pypy') }}
      - name: 'Install in editable mode'
        run: python -m pip install -e .
        env:
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: >
            -Zprofile -Ccodegen-units=1 -Copt-level=0 -Coverflow-checks=off
            -Zpanic_abort_tests -Cpanic=abort
      - name: 'Install tests dependencies'
        run: python -m pip install -r requirements-tests.txt
      - name: 'Run doctests'
        run: >
          coverage run -m doctest README.md
          && coverage run --append -m pytest --doctest-modules --ignore=tests
      - name: 'Run tests'
        run: coverage run --append -m pytest
      - name: 'Collect coverage'
        run: coverage xml
      - name: 'Collect Rust coverage'
        run: grcov target -s . -t cobertura --llvm --branch --ignore-not-existing --ignore "/*" -o coverage_rust.xml
        if: ${{ !startsWith(matrix.python_version, 'pypy') }}
      - name: 'Upload PyPy coverage'
        uses: codecov/codecov-action@v2.1.0
        with:
          fail_ci_if_error: false
          files: ./coverage.xml
        if: ${{ startsWith(matrix.python_version, 'pypy') }}
        continue-on-error: true
      - name: 'Upload Ð¡Python coverage'
        uses: codecov/codecov-action@v2.1.0
        with:
          fail_ci_if_error: false
          files: ./coverage.xml,./coverage_rust.xml
        if: ${{ !startsWith(matrix.python_version, 'pypy') }}
        continue-on-error: true
